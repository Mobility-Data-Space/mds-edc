openapi: 3.0.1
info:
  description: merged spec
  title: merged spec
  version: 1.0.0
servers:
- url: /
paths:
  /v3/assets/request:
    $ref: ./asset-api.yaml#/paths/~1v3~1assets~1request
  /check/health:
    $ref: ./api-observability.yaml#/paths/~1check~1health
  /v3/transferprocesses/{id}/state:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}~1state"
  /v3/assets/{id}:
    $ref: "./asset-api.yaml#/paths/~1v3~1assets~1{id}"
  /v3/contractnegotiations/{id}/reject:
    post:
      description: Reject a pending negotiation
      operationId: rejectNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Manual Negotiation Approval
  /check/liveness:
    $ref: ./api-observability.yaml#/paths/~1check~1liveness
  /check/readiness:
    $ref: ./api-observability.yaml#/paths/~1check~1readiness
  /v3/contractagreements/request:
    $ref: ./contract-agreement-api.yaml#/paths/~1v3~1contractagreements~1request
  /v4alpha/contractagreements/request:
    $ref: ./contract-agreement-api.yaml#/paths/~1v4alpha~1contractagreements~1request
  /v3/policydefinitions/{id}:
    delete:
      description: "Removes a policy definition with the given ID if possible. Deleting\
        \ a policy definition is only possible if that policy definition is not yet\
        \ referenced by a contract definition, in which case an error is returned.\
        \ DANGER ZONE: Note that deleting policy definitions can have unexpected results,\
        \ do this at your own risk!"
      operationId: deletePolicyDefinitionV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Policy definition was deleted successfully
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: An policy definition with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "The policy definition cannot be deleted, because it is referenced\
            \ by a contract definition"
      tags:
      - Policy Definition v3
    get:
      description: Gets a policy definition with the given ID
      operationId: getPolicyDefinitionV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyDefinitionOutput"
          description: The  policy definition
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: An  policy definition with the given ID does not exist
      tags:
      - Policy Definition v3
    put:
      description: "Updates an existing Policy, If the Policy is not found, an error\
        \ is reported"
      operationId: updatePolicyDefinitionV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyDefinitionInput"
      responses:
        "204":
          description: policy definition was updated successfully.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request body was malformed
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorDetail"
          description: "policy definition could not be updated, because it does not\
            \ exists"
      tags:
      - Policy Definition v3
  /v3/edrs/request:
    $ref: ./edr-cache-api.yaml#/paths/~1v3~1edrs~1request
  /v3/contractnegotiations/{id}/agreement:
    get:
      description: Gets a contract agreement for a contract negotiation with the given
        ID
      operationId: getAgreementForNegotiationV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractAgreement"
          description: "The contract agreement that is attached to the negotiation,\
            \ or null"
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation V3
  /v3/catalog/request:
    post:
      operationId: requestCatalogV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CatalogRequest"
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Catalog"
          description: Gets contract offers (=catalog) of a single connector
      tags:
      - Catalog V3
  /v3/transferprocesses/{id}/terminate:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}~1terminate"
  /v3/contractnegotiations:
    post:
      description: "Initiates a contract negotiation for a given offer and with the\
        \ given counter part. Please note that successfully invoking this endpoint\
        \ only means that the negotiation was initiated. Clients must poll the /{id}/state\
        \ endpoint to track the state"
      operationId: initiateContractNegotiationV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContractRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdResponse"
          description: The negotiation was successfully initiated. Returns the contract
            negotiation ID and created timestamp
          links:
            poll-state:
              operationId: getNegotiationStateV3
              parameters:
                id: $response.body#/id
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request body was malformed
      tags:
      - Contract Negotiation V3
  /v3/contractdefinitions/request:
    $ref: ./contract-definition-api.yaml#/paths/~1v3~1contractdefinitions~1request
  /v3/contractagreements/{id}:
    $ref: "./contract-agreement-api.yaml#/paths/~1v3~1contractagreements~1{id}"
  /v3/edrs/{transferProcessId}/dataaddress:
    $ref: "./edr-cache-api.yaml#/paths/~1v3~1edrs~1{transferProcessId}~1dataaddress"
  /v3/contractnegotiations/request:
    post:
      description: Returns all contract negotiations according to a query
      operationId: queryNegotiationsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContractNegotiation"
                type: array
          description: The contract negotiations that match the query
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request was malformed
      tags:
      - Contract Negotiation V3
  /v3/policydefinitions/{id}/evaluationplan:
    post:
      description: "Creates an execution plane for an existing Policy, If the Policy\
        \ is not found, an error is reported"
      operationId: createExecutionPlaneV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyEvaluationPlanRequestSchema"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyEvaluationPlanSchema"
          description: Returns the evaluation plan
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorDetail"
          description: "An evaluation plan could not be created, because the policy\
            \ definition does not exists"
      tags:
      - Policy Definition v3
  /v4alpha/contractagreements/{id}/negotiation:
    $ref: "./contract-agreement-api.yaml#/paths/~1v4alpha~1contractagreements~1{id}~1negotiation"
  /v3/contractnegotiations/{id}/terminate:
    post:
      description: Terminates the contract negotiation.
      operationId: terminateNegotiationV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateNegotiationSchema"
      responses:
        "200":
          description: ContractNegotiation is terminating
          links:
            poll-state:
              operationId: getNegotiationStateV3
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request was malformed
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: A contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation V3
  /v3/transferprocesses/{id}/deprovision:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}~1deprovision"
  /{any}:
    $ref: "./data-plane-public-api-v2.yaml#/paths/~1{any}"
  /v3/dataplanes:
    get:
      description: Returns a list of all currently registered data plane instances
      operationId: getAllDataPlaneInstancesV3
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DataPlaneInstanceSchemaV3"
                type: array
          description: A (potentially empty) list of currently registered data plane
            instances
      tags:
      - Dataplane Selector V3
  /v3/catalog/dataset/request:
    post:
      operationId: getDatasetV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetRequest"
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
          description: Gets single dataset from a connector
      tags:
      - Catalog V3
  /v3/transferprocesses/request:
    $ref: ./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1request
  /v3/transferprocesses/{id}/suspend:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}~1suspend"
  /v3/transferprocesses/{id}:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}"
  /v4alpha/contractagreements/{id}:
    $ref: "./contract-agreement-api.yaml#/paths/~1v4alpha~1contractagreements~1{id}"
  /v3/contractnegotiations/{id}/approve:
    post:
      description: Approve a pending negotiation
      operationId: approveNegotiation
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Manual Negotiation Approval
  /v3/contractdefinitions:
    $ref: ./contract-definition-api.yaml#/paths/~1v3~1contractdefinitions
  /v3/contractdefinitions/{id}:
    $ref: "./contract-definition-api.yaml#/paths/~1v3~1contractdefinitions~1{id}"
  /v3/edrs/{transferProcessId}:
    $ref: "./edr-cache-api.yaml#/paths/~1v3~1edrs~1{transferProcessId}"
  /v3/policydefinitions/request:
    post:
      description: Returns all policy definitions according to a query
      operationId: queryPolicyDefinitionsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuerySpec"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PolicyDefinitionOutput"
                type: array
          description: The policy definitions matching the query
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request was malformed
      tags:
      - Policy Definition v3
  /check/startup:
    $ref: ./api-observability.yaml#/paths/~1check~1startup
  /v3/transferprocesses/{id}/resume:
    $ref: "./transfer-process-api.yaml#/paths/~1v3~1transferprocesses~1{id}~1resume"
  /v3/policydefinitions:
    post:
      description: Creates a new policy definition
      operationId: createPolicyDefinitionV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyDefinitionInput"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdResponse"
          description: policy definition was created successfully. Returns the Policy
            Definition Id and created timestamp
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: Request body was malformed
        "409":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Could not create policy definition, because a contract definition\
            \ with that ID already exists"
      tags:
      - Policy Definition v3
  /v4alpha/protocol-versions/request:
    $ref: ./protocol-version-api.yaml#/paths/~1v4alpha~1protocol-versions~1request
  /v3/contractagreements/{id}/negotiation:
    $ref: "./contract-agreement-api.yaml#/paths/~1v3~1contractagreements~1{id}~1negotiation"
  /v3/policydefinitions/{id}/validate:
    post:
      description: "Validates an existing Policy, If the Policy is not found, an error\
        \ is reported"
      operationId: validatePolicyDefinitionV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyValidationResultSchema"
          description: Returns the validation result
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorDetail"
          description: "policy definition could not be validated, because it does\
            \ not exists"
      tags:
      - Policy Definition v3
  /v4alpha/dataplanes:
    get:
      description: Returns a list of all currently registered data plane instances
      operationId: getAllDataPlaneInstancesV4
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DataPlaneInstanceSchemaV4"
                type: array
          description: A (potentially empty) list of currently registered data plane
            instances
      tags:
      - Dataplane Selector v4alpha
  /v3/transferprocesses:
    $ref: ./transfer-process-api.yaml#/paths/~1v3~1transferprocesses
  /v3/contractnegotiations/{id}:
    delete:
      description: Deletes the contract negotiation with the given ID. Only terminated
        negotiations without agreement will be deleted
      operationId: deleteNegotiationV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ContractNegotiation is deleted
          links:
            poll-state:
              operationId: getNegotiationStateV3
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: A contract negotiation with the given ID does not exist
        "409":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: The given contract negotiation cannot be deleted due to a wrong
            state or has existing contract agreement
      tags:
      - Contract Negotiation V3
    get:
      description: Gets a contract negotiation with the given ID
      operationId: getNegotiationV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractNegotiation"
          description: The contract negotiation
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation V3
  /v3/contractnegotiations/{id}/state:
    get:
      description: Gets the state of a contract negotiation with the given ID
      operationId: getNegotiationStateV3
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NegotiationState"
          description: The contract negotiation's state
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: "Request was malformed, e.g. id was null"
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApiErrorDetail"
                type: array
          description: An contract negotiation with the given ID does not exist
      tags:
      - Contract Negotiation V3
  /v3/assets:
    $ref: ./asset-api.yaml#/paths/~1v3~1assets
components:
  schemas:
    PolicyDefinitionOutput:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@id': definition-id
        policy:
          '@context': http://www.w3.org/ns/odrl.jsonld
          '@type': Set
          uid: http://example.com/policy:1010
          permission:
          - target: http://example.com/asset:9898.movie
            action: display
            constraint:
            - leftOperand: spatial
              operator: eq
              rightOperand: https://www.wikidata.org/wiki/Q183
              comment: i.e Germany
        createdAt: 1688465655
      properties:
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/PolicyDefinition
          type: string
        policy:
          description: ODRL policy
          example:
            '@context': http://www.w3.org/ns/odrl.jsonld
            '@id': 0949ba30-680c-44e6-bc7d-1688cbe1847e
            '@type': odrl:Set
            permission:
              target: http://example.com/asset:9898.movie
              action:
                type: http://www.w3.org/ns/odrl/2/use
              constraint:
                leftOperand: https://w3id.org/edc/v0.0.1/ns/left
                operator: eq
                rightOperand: value
            prohibition: []
            obligation: []
          type: object
      type: object
    Policy:
      description: ODRL policy
      example:
        '@context': http://www.w3.org/ns/odrl.jsonld
        '@id': 0949ba30-680c-44e6-bc7d-1688cbe1847e
        '@type': odrl:Set
        permission:
          target: http://example.com/asset:9898.movie
          action:
            type: http://www.w3.org/ns/odrl/2/use
          constraint:
            leftOperand: https://w3id.org/edc/v0.0.1/ns/left
            operator: eq
            rightOperand: value
        prohibition: []
        obligation: []
      type: object
    ApiErrorDetail:
      example:
        message: error message
        type: ErrorType
        path: object.error.path
        invalidValue: this value is not valid
      properties:
        invalidValue:
          type: string
        message:
          type: string
        path:
          type: string
        type:
          type: string
      type: object
    PolicyDefinitionInput:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@id': definition-id
        policy:
          '@context': http://www.w3.org/ns/odrl.jsonld
          '@type': Set
          uid: http://example.com/policy:1010
          profile: http://example.com/odrl:profile:02
          permission:
          - target: http://example.com/asset:9898.movie
            action: display
            constraint:
            - leftOperand: spatial
              operator: eq
              rightOperand: https://www.wikidata.org/wiki/Q183
              comment: i.e Germany
      properties:
        '@context':
          type: object
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/PolicyDefinition
          type: string
        policy:
          description: ODRL policy
          example:
            '@context': http://www.w3.org/ns/odrl.jsonld
            '@id': 0949ba30-680c-44e6-bc7d-1688cbe1847e
            '@type': odrl:Set
            permission:
              target: http://example.com/asset:9898.movie
              action:
                type: http://www.w3.org/ns/odrl/2/use
              constraint:
                leftOperand: https://w3id.org/edc/v0.0.1/ns/left
                operator: eq
                rightOperand: value
            prohibition: []
            obligation: []
          type: object
      required:
      - '@context'
      - policy
      type: object
    ContractAgreement:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': https://w3id.org/edc/v0.0.1/ns/ContractAgreement
        '@id': negotiation-id
        providerId: provider-id
        consumerId: consumer-id
        assetId: asset-id
        contractSigningDate: 1688465655
        policy:
          '@context': http://www.w3.org/ns/odrl.jsonld
          '@type': Set
          '@id': offer-id
          permission:
          - target: asset-id
            action: display
      properties:
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/ContractAgreement
          type: string
        assetId:
          type: string
        consumerId:
          type: string
        contractSigningDate:
          format: int64
          type: integer
        policy:
          description: ODRL policy
          example:
            '@context': http://www.w3.org/ns/odrl.jsonld
            '@id': 0949ba30-680c-44e6-bc7d-1688cbe1847e
            '@type': odrl:Set
            permission:
              target: http://example.com/asset:9898.movie
              action:
                type: http://www.w3.org/ns/odrl/2/use
              constraint:
                leftOperand: https://w3id.org/edc/v0.0.1/ns/left
                operator: eq
                rightOperand: value
            prohibition: []
            obligation: []
          type: object
        providerId:
          type: string
      type: object
    Catalog:
      description: DCAT catalog
      example:
        '@id': 7df65569-8c59-4013-b1c0-fa14f6641bf2
        '@type': dcat:Catalog
        dcat:dataset:
          '@id': bcca61be-e82e-4da6-bfec-9716a56cef35
          '@type': dcat:Dataset
          odrl:hasPolicy:
            '@id': OGU0ZTMzMGMtODQ2ZS00ZWMxLThmOGQtNWQxNWM0NmI2NmY4:YmNjYTYxYmUtZTgyZS00ZGE2LWJmZWMtOTcxNmE1NmNlZjM1:NDY2ZTZhMmEtNjQ1Yy00ZGQ0LWFlZDktMjdjNGJkZTU4MDNj
            '@type': odrl:Set
            odrl:permission:
              odrl:target: bcca61be-e82e-4da6-bfec-9716a56cef35
              odrl:action:
                odrl:type: http://www.w3.org/ns/odrl/2/use
              odrl:constraint:
                odrl:and:
                - odrl:leftOperand: https://w3id.org/edc/v0.0.1/ns/inForceDate
                  odrl:operator:
                    '@id': odrl:gteq
                  odrl:rightOperand: 2023-07-07T07:19:58.585601395Z
                - odrl:leftOperand: https://w3id.org/edc/v0.0.1/ns/inForceDate
                  odrl:operator:
                    '@id': odrl:lteq
                  odrl:rightOperand: 2023-07-12T07:19:58.585601395Z
            odrl:prohibition: []
            odrl:obligation: []
          dcat:distribution:
          - '@type': dcat:Distribution
            dct:format:
              '@id': HttpData
            dcat:accessService: 5e839777-d93e-4785-8972-1005f51cf367
          description: description
          id: bcca61be-e82e-4da6-bfec-9716a56cef35
        dcat:service:
          '@id': 5e839777-d93e-4785-8972-1005f51cf367
          '@type': dcat:DataService
          dct:terms: connector
          dcat:endpointURL: http://localhost:16806/protocol
        dspace:participantId: urn:connector:provider
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
          dct: http://purl.org/dc/terms/
          edc: https://w3id.org/edc/v0.0.1/ns/
          dcat: http://www.w3.org/ns/dcat#
          odrl: http://www.w3.org/ns/odrl/2/
          dspace: https://w3id.org/dspace/v0.8/
      type: object
    CatalogRequest:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': CatalogRequest
        counterPartyAddress: http://provider-address
        counterPartyId: providerId
        protocol: dataspace-protocol-http
        additionalScopes:
        - org.eclipse.edc.vc.type:SomeCredential:read
        - org.eclipse.edc.vc.type:AnotherCredential:write
        querySpec:
          offset: 0
          limit: 50
          sortOrder: DESC
          sortField: fieldName
          filterExpression: []
      properties:
        '@context':
          type: object
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/CatalogRequest
          type: string
        additionalScopes:
          items:
            type: string
          type: array
        counterPartyAddress:
          type: string
        counterPartyId:
          type: string
        protocol:
          type: string
        querySpec:
          $ref: "#/components/schemas/QuerySpec"
      required:
      - '@context'
      - counterPartyAddress
      - protocol
      type: object
    QuerySpec:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': QuerySpec
        offset: 5
        limit: 10
        sortOrder: DESC
        sortField: fieldName
        filterExpression: []
      properties:
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/QuerySpec
          type: string
        filterExpression:
          items:
            $ref: "#/components/schemas/Criterion"
          type: array
        limit:
          format: int32
          type: integer
        offset:
          format: int32
          type: integer
        sortField:
          type: string
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    Criterion:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': Criterion
        operandLeft: fieldName
        operator: =
        operandRight: some value
      properties:
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/Criterion
          type: string
        operandLeft:
          type: object
        operandRight:
          type: object
        operator:
          type: string
      required:
      - operandLeft
      - operandRight
      - operator
      type: object
    IdResponse:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@id': id-value
        createdAt: 1688465655
      properties:
        '@id':
          type: string
        createdAt:
          format: int64
          type: integer
      type: object
    ContractRequest:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': https://w3id.org/edc/v0.0.1/ns/ContractRequest
        counterPartyAddress: http://provider-address
        protocol: dataspace-protocol-http
        policy:
          '@context': http://www.w3.org/ns/odrl.jsonld
          '@type': odrl:Offer
          '@id': offer-id
          assigner: providerId
          permission: []
          prohibition: []
          obligation: []
          target: assetId
        callbackAddresses:
        - transactional: false
          uri: http://callback/url
          events:
          - contract.negotiation
          - transfer.process
          authKey: auth-key
          authCodeId: auth-code-id
      properties:
        '@context':
          type: object
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/ContractRequest
          type: string
        callbackAddresses:
          items:
            $ref: "#/components/schemas/CallbackAddress"
          type: array
        counterPartyAddress:
          type: string
        policy:
          $ref: "#/components/schemas/Offer"
        protocol:
          type: string
      required:
      - '@context'
      - counterPartyAddress
      - policy
      - protocol
      type: object
    CallbackAddress:
      properties:
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/CallbackAddress
          type: string
        authCodeId:
          type: string
        authKey:
          type: string
        events:
          items:
            type: string
          type: array
          uniqueItems: true
        transactional:
          type: boolean
        uri:
          type: string
      type: object
    Offer:
      description: ODRL offer
      example:
        '@context': http://www.w3.org/ns/odrl.jsonld
        '@type': odrl:Offer
        '@id': offer-id
        assigner: providerId
        target: assetId
        permission: []
        prohibition: []
        obligation: []
      properties:
        '@id':
          type: string
        '@type':
          example: http://www.w3.org/ns/odrl/2/Offer
          type: string
        assigner:
          type: string
        target:
          type: string
      required:
      - '@id'
      - assigner
      - target
      type: object
    ContractNegotiation:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': https://w3id.org/edc/v0.0.1/ns/ContractNegotiation
        '@id': negotiation-id
        type: PROVIDER
        protocol: dataspace-protocol-http
        counterPartyId: counter-party-id
        counterPartyAddress: http://counter/party/address
        state: VERIFIED
        contractAgreementId: contract:agreement:id
        errorDetail: eventual-error-detail
        createdAt: 1688465655
        callbackAddresses:
        - transactional: false
          uri: http://callback/url
          events:
          - contract.negotiation
          - transfer.process
          authKey: auth-key
          authCodeId: auth-code-id
      properties:
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/ContractNegotiation
          type: string
        callbackAddresses:
          items:
            $ref: "#/components/schemas/CallbackAddress"
          type: array
        contractAgreementId:
          type: string
        counterPartyAddress:
          type: string
        counterPartyId:
          type: string
        errorDetail:
          type: string
        protocol:
          type: string
        state:
          type: string
        type:
          enum:
          - CONSUMER
          - PROVIDER
          type: string
      type: object
    PolicyEvaluationPlanSchema:
      example:
        '@type': PolicyEvaluationPlan
        preValidators: DcpScopeExtractorFunction
        permissionSteps:
          '@type': PermissionStep
          isFiltered: false
          filteringReasons: []
          ruleFunctions: []
          constraintSteps:
            '@type': AtomicConstraintStep
            isFiltered: true
            filteringReasons:
            - leftOperand 'MembershipCredential' is not bound to scope 'request.catalog'
            - leftOperand 'MembershipCredential' is not bound to any function within
              scope 'request.catalog'
            functionParams:
            - '''MembershipCredential'''
            - EQ
            - '''active'''
          dutySteps: []
        prohibitionSteps: []
        obligationSteps: []
        postValidators: DefaultScopeMappingFunction
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
          edc: https://w3id.org/edc/v0.0.1/ns/
          odrl: http://www.w3.org/ns/odrl/2/
      type: object
    PolicyEvaluationPlanRequestSchema:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': PolicyEvaluationPlanRequest
        policyScope: catalog
      properties:
        policyScope:
          type: string
      type: object
    TerminateNegotiationSchema:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': https://w3id.org/edc/v0.0.1/ns/TerminateNegotiation
        '@id': negotiation-id
        reason: a reason to terminate
      properties:
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/TerminateNegotiation
          type: string
        reason:
          type: string
      type: object
    DataPlaneInstanceSchemaV3:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@id': your-dataplane-id
        url: http://somewhere.com:1234/api/v1
        allowedSourceTypes:
        - source-type1
        - source-type2
        allowedDestTypes:
        - your-dest-type
        allowedTransferTypes:
        - transfer-type
        state: AVAILABLE
        stateTimestamp: 1688465655
      properties:
        '@context':
          type: object
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/DataPlaneInstance
          type: string
        allowedDestTypes:
          deprecated: true
          items:
            deprecated: true
            type: string
          type: array
          uniqueItems: true
        allowedSourceTypes:
          items:
            type: string
          type: array
          uniqueItems: true
        lastActive:
          format: int64
          type: integer
        state:
          type: string
        stateTimestamp:
          format: int64
          type: integer
        turnCount:
          deprecated: true
          format: int32
          type: integer
        url:
          format: url
          type: string
      required:
      - '@context'
      - allowedDestTypes
      - allowedSourceTypes
      - url
      type: object
    Dataset:
      description: DCAT dataset
      example:
        '@id': bcca61be-e82e-4da6-bfec-9716a56cef35
        '@type': dcat:Dataset
        odrl:hasPolicy:
          '@id': OGU0ZTMzMGMtODQ2ZS00ZWMxLThmOGQtNWQxNWM0NmI2NmY4:YmNjYTYxYmUtZTgyZS00ZGE2LWJmZWMtOTcxNmE1NmNlZjM1:NDY2ZTZhMmEtNjQ1Yy00ZGQ0LWFlZDktMjdjNGJkZTU4MDNj
          '@type': odrl:Set
          odrl:permission:
            odrl:target: bcca61be-e82e-4da6-bfec-9716a56cef35
            odrl:action:
              odrl:type: http://www.w3.org/ns/odrl/2/use
            odrl:constraint:
              odrl:and:
              - odrl:leftOperand: https://w3id.org/edc/v0.0.1/ns/inForceDate
                odrl:operator:
                  '@id': odrl:gteq
                odrl:rightOperand: 2023-07-07T07:19:58.585601395Z
              - odrl:leftOperand: https://w3id.org/edc/v0.0.1/ns/inForceDate
                odrl:operator:
                  '@id': odrl:lteq
                odrl:rightOperand: 2023-07-12T07:19:58.585601395Z
          odrl:prohibition: []
          odrl:obligation: []
          odrl:target: bcca61be-e82e-4da6-bfec-9716a56cef35
        dcat:distribution:
        - '@type': dcat:Distribution
          dct:format:
            '@id': HttpData
          dcat:accessService: 5e839777-d93e-4785-8972-1005f51cf367
        description: description
        id: bcca61be-e82e-4da6-bfec-9716a56cef35
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
          dct: http://purl.org/dc/terms/
          edc: https://w3id.org/edc/v0.0.1/ns/
          dcat: http://www.w3.org/ns/dcat#
          odrl: http://www.w3.org/ns/odrl/2/
          dspace: https://w3id.org/dspace/v0.8/
      type: object
    DatasetRequest:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': DatasetRequest
        '@id': dataset-id
        counterPartyAddress: http://counter-party-address
        counterPartyId: counter-party-id
        protocol: dataspace-protocol-http
      properties:
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/CatalogRequest
          type: string
        counterPartyAddress:
          type: string
        counterPartyId:
          type: string
        protocol:
          type: string
        querySpec:
          $ref: "#/components/schemas/QuerySpec"
      type: object
    PolicyValidationResultSchema:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@type': PolicyValidationResult
        isValid: false
        errors:
        - error1
        - error2
      properties:
        errors:
          items:
            type: string
          type: array
        isValid:
          type: boolean
      type: object
    DataPlaneInstanceSchemaV4:
      example:
        '@context':
          '@vocab': https://w3id.org/edc/v0.0.1/ns/
        '@id': your-dataplane-id
        url: http://somewhere.com:1234/api/v1
        allowedSourceTypes:
        - source-type1
        - source-type2
        allowedTransferTypes:
        - transfer-type
        state: AVAILABLE
        stateTimestamp: 1688465655
      properties:
        '@context':
          type: object
        '@id':
          type: string
        '@type':
          example: https://w3id.org/edc/v0.0.1/ns/DataPlaneInstance
          type: string
        allowedSourceTypes:
          items:
            type: string
          type: array
          uniqueItems: true
        lastActive:
          format: int64
          type: integer
        state:
          type: string
        stateTimestamp:
          format: int64
          type: integer
        url:
          format: url
          type: string
      required:
      - '@context'
      - allowedSourceTypes
      - url
      type: object
    NegotiationState:
      example:
        state: state
      properties:
        state:
          type: string
      type: object
